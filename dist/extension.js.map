{"version":3,"sources":[".././src/extension.js","../external \"fs\"","../external \"vscode\"","../webpack/bootstrap","../webpack/startup"],"names":["vscode","fs","module","exports","activate","context","disposable","commands","registerCommand","e","fsPath","svgFiles","symbolList","curDir","replace","filesInDir","readdirSync","FILE_NAME","workspace","getConfiguration","MAX_COMPRES","indexOf","forEach","file","endsWith","push","length","window","showInformationMessage","path","idx","fileName","svgString","readFileSync","toString","svgHTML","match","style","viewBox","symbol","toLowerCase","classList","map","item","newClass","RegExp","slice","idList","newID","symbolInnerHtml","sprite","join","writeFile","err","main","subscriptions","deactivate","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"mappings":"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","file":"extension.js","sourcesContent":["const vscode = require('vscode');\nconst fs     = require('fs');\n\nconst main = (fsPath) => {\n\tconst svgFiles    = [];\n\tconst symbolList  = [];\n\tconst SAPARATOR   = '__';\n\tconst curDir      = fsPath.replace(/\\\\/g, '/');\n\tconst filesInDir  = fs.readdirSync(curDir);\n\tconst FILE_NAME   = vscode.workspace.getConfiguration('svgSpriteGenerator')['output']['fileName'].replace(/[^-_.A-Za-z0-9]/g, '');\n\tconst MAX_COMPRES = vscode.workspace.getConfiguration('svgSpriteGenerator')['output']['maximumCompression'];\n\n\t// если фалы лежат в 'node_modules' - не обрабатываем и выходим\n\tif (fsPath.indexOf('node_modules') > -1) return;\n\n\tfilesInDir.forEach(file => {\n\t\tif ( file.endsWith('.svg') )\n\t\tsvgFiles.push( curDir + '/' + file);\n\t});\n\n\tif ( ! svgFiles.length ) {\n\t\tvscode.window.showInformationMessage('SVG files not found!');\n\t\treturn false;\n\t}\n\n\tsvgFiles.forEach((path, idx) => {\n\t\tlet fileName  = path.replace(/.+[\\\\/](.*)\\.svg/gi, '$1').replace(/\\s/gi, '-');\n\t\tlet svgString = fs.readFileSync(path).toString();\n\t\tlet svgHTML   = svgString.match(/<svg.+<\\/svg>/gis) ? svgString.match(/<svg.+<\\/svg>/gis)[0] : '';\n\t\tlet style     = svgString.match(/<style[^>].+<\\/style>/gis) ? svgString.match(/<style[^>].+<\\/style>/gis)[0] : '';\n\t\tlet viewBox   = svgString.replace(/.*viewBox\\s?=[\"]([^\"]+)[\"].*/gis, '$1');\n\t\tlet symbol    = '';\n\n\t\tif ( !svgHTML.length || !viewBox.length ) return false;\n\n\t\t// если в текущем файле есть symbol - значит это уже спрайт и мы его пропускаем\n\t\tif ( svgString.toLowerCase().indexOf(\"symbol\".toLowerCase()) > -1 ) return false;\n\n\t\t// обрабатываем все css-классы данного SVG\n\t\tif ( style.length && style.match(/([.\\w]+)(\\s*{)/isg).length ) {\n\t\t\tlet classList = style.match(/([.\\w]+)(\\s*{)/isg).map(item => {\n\t\t\t\treturn item.replace(/\\s*{/gi, '');\n\t\t\t});\n\t\t\tif ( classList.length ) {\n\t\t\t\tclassList.forEach(item => {\n\t\t\t\t\tlet newClass = item + SAPARATOR + idx;\n\t\t\t\t\tsvgHTML = svgHTML.replace(`${item}{`, `${newClass}{`);\n\t\t\t\t\tsvgHTML = svgHTML.replace(`${item} {`, `${newClass}{`);\n\t\t\t\t\tsvgHTML = svgHTML.replace(new RegExp('class=\"' + item.slice(1) + '\"', 'gis'), `class=\"${newClass.slice(1)}\"`);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// обрабатываем все css-ID данного SVG\n\t\t// например тут: <rect id=\"SVGID_1_\" x=\"3.5\" y=\"1\" width=\"17\" height=\"22\"></rect>\n\t\t// и тут: <use xlink:href=\"#SVGID_1_\" style=\"overflow:visible;\"></use>\n\t\t// и тут: <path d=\"M2000 0H-3V503H2000V0Z\" fill=\"url(#paint0_linear)\"/>\n\t\tif ( !! svgHTML.match(/\\bid=\"[^\"]+\"/isg) ) {\n\t\t\tlet idList = svgHTML.match(/\\bid=\"[^\"]+\"/isg).map(item =>\n\t\t\t\titem.replace(/id=\"|\"/gi, '')\n\t\t\t);\n\t\t\tif ( idList.length ) {\n\t\t\t\tidList.forEach(item => {\n\t\t\t\t\tlet newID = item + SAPARATOR + idx;\n\t\t\t\t\tsvgHTML = svgHTML.replace(new RegExp('id=\"' + item + '\"', 'g'), `id=\"${newID}\"`);\n\t\t\t\t\tsvgHTML = svgHTML.replace(new RegExp('\"#' + item + '\"', 'g'), `\"#${newID}\"`)\n\t\t\t\t\tsvgHTML = svgHTML.replace(new RegExp('url[(]#' + item + '[)]', 'g'), `url(#${newID})`);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tlet symbolInnerHtml = svgHTML.replace(/.*<svg[^>]+>(.+)<\\/svg>/gsi, '$1');\n\n\t\t// убрать разрывы строки внутри path\n\t\tsymbolInnerHtml = symbolInnerHtml.replace(/[\\r\\n]+\\s*(\\w)/g, '$1');\n\t\tsymbolInnerHtml = symbolInnerHtml.replace(/[\\r\\n]+\\s*\"/g, ' \"');\n\t\tsymbolInnerHtml = symbolInnerHtml.replace(/\"[\\r\\n]+\\s*\\/>/g, '\"/>');\n\n\t\t// подогнать все теги к левому краю\n\t\tsymbolInnerHtml = symbolInnerHtml.replace(/[\\r\\n]+\\s*</gs, '\\n<');\n\n\t\t// формируем symbol\n\t\tsymbol = '<symbol id=\"' + fileName + '\" viewBox=\"' + viewBox + '\" xmlns=\"http://www.w3.org/2000/svg\">'\n\t\t\t\t+ symbolInnerHtml\n\t\t\t\t+ '</symbol>';\n\n\t\tsymbolList.push(symbol);\n\t});\n\n\n\tlet sprite = '<svg width=\"0\" height=\"0\" fill=\"none\" style=\"visibility: hidden; position: absolute;\" aria-hidden=\"true\">'\n\t\t\t\t+ '\\n\\n'\n\t\t\t\t+ symbolList.join(\"\\n\\n\")\n\t\t\t\t+ '\\n\\n'\n\t\t\t\t+ '</svg>';\n\n\n\t// если указано максимальное сжатие\n\tif ( MAX_COMPRES ) {\n\t\tsprite = sprite.replace(/([\\r\\n])\\s*/gs, '$1');\n\t\tsprite = sprite.replace(/[\\r\\n]+/gs, '');\n\t}\n\n\n\tfs.writeFile(curDir + '/' + FILE_NAME + '.svg', sprite, function (err) {\n\t\tif (err) throw err;\n\t\tvscode.window.showInformationMessage(`File \"${FILE_NAME}.svg\" saved to the current folder`);\n\t});\n}\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nfunction activate(context) {\n\tconst disposable = vscode.commands.registerCommand('smat.svgSpriteGenerate', (e) => {\n\t\tmain(e.fsPath);\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\n// vscode.commands.executeCommand('copyFilePath')\nfunction deactivate() {}\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n","module.exports = require(\"fs\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(474);\n"],"sourceRoot":""}